var data = {lines:[
{"lineNum":"    1","line":"struct XML::XPathContext"},
{"lineNum":"    2","line":"  def initialize(node : Node)"},
{"lineNum":"    3","line":"    @ctx = LibXML.xmlXPathNewContext(node.to_unsafe.value.doc)"},
{"lineNum":"    4","line":"    @ctx.value.node = node.to_unsafe"},
{"lineNum":"    5","line":"  end"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"  def evaluate(search_path : String)"},
{"lineNum":"    8","line":"    xpath = LibXML.xmlXPathEvalExpression(search_path, self)"},
{"lineNum":"    9","line":"    unless xpath"},
{"lineNum":"   10","line":"      {% if flag?(:arm) || flag?(:aarch64) %}"},
{"lineNum":"   11","line":"        if errors = XML::Error.errors"},
{"lineNum":"   12","line":"          raise errors.last"},
{"lineNum":"   13","line":"        end"},
{"lineNum":"   14","line":"      {% end %}"},
{"lineNum":"   15","line":"      raise XML::Error.new(\"Error in \'#{search_path}\' expression\", 0)"},
{"lineNum":"   16","line":"    end"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"    raise XML::Error.new(\"Error in \'#{search_path}\' expression\", 0) unless xpath.value"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"    case xpath.value.type"},
{"lineNum":"   21","line":"    when LibXML::XPathObjectType::STRING"},
{"lineNum":"   22","line":"      String.new(xpath.value.stringval)"},
{"lineNum":"   23","line":"    when LibXML::XPathObjectType::NUMBER"},
{"lineNum":"   24","line":"      xpath.value.floatval"},
{"lineNum":"   25","line":"    when LibXML::XPathObjectType::BOOLEAN"},
{"lineNum":"   26","line":"      xpath.value.boolval != 0"},
{"lineNum":"   27","line":"    when LibXML::XPathObjectType::NODESET"},
{"lineNum":"   28","line":"      if xpath.value.nodesetval"},
{"lineNum":"   29","line":"        NodeSet.new(Node.new(@ctx.value.doc), xpath.value.nodesetval)"},
{"lineNum":"   30","line":"      else"},
{"lineNum":"   31","line":"        NodeSet.new(Node.new(@ctx.value.doc))"},
{"lineNum":"   32","line":"      end"},
{"lineNum":"   33","line":"    else"},
{"lineNum":"   34","line":"      NodeSet.new(Node.new(@ctx.value.doc))"},
{"lineNum":"   35","line":"    end"},
{"lineNum":"   36","line":"  end"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"  def register_namespaces(namespaces)"},
{"lineNum":"   39","line":"    namespaces.each do |prefix, uri|"},
{"lineNum":"   40","line":"      register_namespace prefix, uri"},
{"lineNum":"   41","line":"    end"},
{"lineNum":"   42","line":"  end"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"  def register_namespace(prefix, uri)"},
{"lineNum":"   45","line":"    LibXML.xmlXPathRegisterNs(self, prefix.to_s, uri.to_s)"},
{"lineNum":"   46","line":"  end"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"  def register_variables(variables)"},
{"lineNum":"   49","line":"    variables.each do |name, value|"},
{"lineNum":"   50","line":"      register_variable name, value"},
{"lineNum":"   51","line":"    end"},
{"lineNum":"   52","line":"  end"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"  def register_variable(name, value)"},
{"lineNum":"   55","line":"    case value"},
{"lineNum":"   56","line":"    when Bool"},
{"lineNum":"   57","line":"      obj = LibXML.xmlXPathNewBoolean(value ? 1 : 0)"},
{"lineNum":"   58","line":"    when Number"},
{"lineNum":"   59","line":"      obj = LibXML.xmlXPathNewFloat(value.to_f64)"},
{"lineNum":"   60","line":"    else"},
{"lineNum":"   61","line":"      obj = LibXML.xmlXPathNewCString(value.to_s)"},
{"lineNum":"   62","line":"    end"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"    LibXML.xmlXPathRegisterVariable(self, name, obj)"},
{"lineNum":"   65","line":"  end"},
{"lineNum":"   66","line":""},
{"lineNum":"   67","line":"  def to_unsafe"},
{"lineNum":"   68","line":"    @ctx"},
{"lineNum":"   69","line":"  end"},
{"lineNum":"   70","line":"end"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"LibXML.xmlXPathInit","class":"lineNoCov","hits":"0","possible_hits":"1",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
