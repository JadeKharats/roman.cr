var data = {lines:[
{"lineNum":"    1","line":"require \"../dwarf\""},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"module Debug"},
{"lineNum":"    4","line":"  module DWARF"},
{"lineNum":"    5","line":"    enum TAG : UInt32"},
{"lineNum":"    6","line":"      ArrayType       = 0x01"},
{"lineNum":"    7","line":"      ClassType       = 0x02"},
{"lineNum":"    8","line":"      EntryPoint      = 0x03"},
{"lineNum":"    9","line":"      EnumerationType = 0x04"},
{"lineNum":"   10","line":"      FormalParameter = 0x05"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"      ImportedDeclaration    = 0x08"},
{"lineNum":"   13","line":"      Label                  = 0x0a"},
{"lineNum":"   14","line":"      LexicalBlock           = 0x0b"},
{"lineNum":"   15","line":"      Member                 = 0x0d"},
{"lineNum":"   16","line":"      PointerType            = 0x0f"},
{"lineNum":"   17","line":"      ReferenceType          = 0x10"},
{"lineNum":"   18","line":"      CompileUnit            = 0x11"},
{"lineNum":"   19","line":"      StringType             = 0x12"},
{"lineNum":"   20","line":"      StructureType          = 0x13"},
{"lineNum":"   21","line":"      SubroutineType         = 0x15"},
{"lineNum":"   22","line":"      Typedef                = 0x16"},
{"lineNum":"   23","line":"      UnionType              = 0x17"},
{"lineNum":"   24","line":"      UnspecifiedParameters  = 0x18"},
{"lineNum":"   25","line":"      Variant                = 0x19"},
{"lineNum":"   26","line":"      CommonBlock            = 0x1a"},
{"lineNum":"   27","line":"      CommonInclusion        = 0x1b"},
{"lineNum":"   28","line":"      Inheritance            = 0x1c"},
{"lineNum":"   29","line":"      InlinedSubroutine      = 0x1d"},
{"lineNum":"   30","line":"      Module                 = 0x1e"},
{"lineNum":"   31","line":"      PtrToMemberType        = 0x1f"},
{"lineNum":"   32","line":"      SetType                = 0x20"},
{"lineNum":"   33","line":"      SubrangeType           = 0x21"},
{"lineNum":"   34","line":"      WithStmt               = 0x22"},
{"lineNum":"   35","line":"      AccessDeclaration      = 0x23"},
{"lineNum":"   36","line":"      BaseType               = 0x24"},
{"lineNum":"   37","line":"      CatchBlock             = 0x25"},
{"lineNum":"   38","line":"      ConstType              = 0x26"},
{"lineNum":"   39","line":"      Constant               = 0x27"},
{"lineNum":"   40","line":"      Enumerator             = 0x28"},
{"lineNum":"   41","line":"      FileType               = 0x29"},
{"lineNum":"   42","line":"      Friend                 = 0x2a"},
{"lineNum":"   43","line":"      Namelist               = 0x2b"},
{"lineNum":"   44","line":"      NamelistItem           = 0x2c"},
{"lineNum":"   45","line":"      PackedType             = 0x2d"},
{"lineNum":"   46","line":"      Subprogram             = 0x2e"},
{"lineNum":"   47","line":"      TemplateTypeParameter  = 0x2f"},
{"lineNum":"   48","line":"      TemplateValueParameter = 0x30"},
{"lineNum":"   49","line":"      ThrownType             = 0x31"},
{"lineNum":"   50","line":"      TryBlock               = 0x32"},
{"lineNum":"   51","line":"      VariantPart            = 0x33"},
{"lineNum":"   52","line":"      Variable               = 0x34"},
{"lineNum":"   53","line":"      VolatileType           = 0x35"},
{"lineNum":"   54","line":"      DwarfProcedure         = 0x36"},
{"lineNum":"   55","line":"      RestrictType           = 0x37"},
{"lineNum":"   56","line":"      InterfaceType          = 0x38"},
{"lineNum":"   57","line":"      Namespace              = 0x39"},
{"lineNum":"   58","line":"      ImportedModule         = 0x3a"},
{"lineNum":"   59","line":"      UnspecifiedType        = 0x3b"},
{"lineNum":"   60","line":"      PartialUnit            = 0x3c"},
{"lineNum":"   61","line":"      ImportedUnit           = 0x3d"},
{"lineNum":"   62","line":"      Condition              = 0x3f"},
{"lineNum":"   63","line":"      SharedType             = 0x40"},
{"lineNum":"   64","line":"      TypeUnit               = 0x41"},
{"lineNum":"   65","line":"      RvalueReferenceType    = 0x42"},
{"lineNum":"   66","line":"      TemplateAlias          = 0x43"},
{"lineNum":"   67","line":"    end"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"    enum AT : UInt32"},
{"lineNum":"   70","line":"      DW_AT_sibling              = 0x01 # reference"},
{"lineNum":"   71","line":"      DW_AT_location             = 0x02 # exprloc, loclistptr"},
{"lineNum":"   72","line":"      DW_AT_name                 = 0x03 # string"},
{"lineNum":"   73","line":"      DW_AT_ordering             = 0x09 # constant"},
{"lineNum":"   74","line":"      DW_AT_byte_size            = 0x0b # constant, exprloc, reference"},
{"lineNum":"   75","line":"      DW_AT_bit_offset           = 0x0c # constant, exprloc, reference"},
{"lineNum":"   76","line":"      DW_AT_bit_size             = 0x0d # constant, exprloc, reference"},
{"lineNum":"   77","line":"      DW_AT_stmt_list            = 0x10 # lineptr"},
{"lineNum":"   78","line":"      DW_AT_low_pc               = 0x11 # address"},
{"lineNum":"   79","line":"      DW_AT_high_pc              = 0x12 # address, constant"},
{"lineNum":"   80","line":"      DW_AT_language             = 0x13 # constant"},
{"lineNum":"   81","line":"      DW_AT_discr                = 0x15 # reference"},
{"lineNum":"   82","line":"      DW_AT_discr_value          = 0x16 # constant"},
{"lineNum":"   83","line":"      DW_AT_visibility           = 0x17 # constant"},
{"lineNum":"   84","line":"      DW_AT_import               = 0x18 # reference"},
{"lineNum":"   85","line":"      DW_AT_string_length        = 0x19 # exprloc, loclistptr"},
{"lineNum":"   86","line":"      DW_AT_common_reference     = 0x1a # reference"},
{"lineNum":"   87","line":"      DW_AT_comp_dir             = 0x1b # string"},
{"lineNum":"   88","line":"      DW_AT_const_value          = 0x1c # block, constant, string"},
{"lineNum":"   89","line":"      DW_AT_containing_type      = 0x1d # reference"},
{"lineNum":"   90","line":"      DW_AT_default_value        = 0x1e # reference"},
{"lineNum":"   91","line":"      DW_AT_inline               = 0x20 # constant"},
{"lineNum":"   92","line":"      DW_AT_is_optional          = 0x21 # flag"},
{"lineNum":"   93","line":"      DW_AT_lower_bound          = 0x22 # constant, exprloc, reference"},
{"lineNum":"   94","line":"      DW_AT_producer             = 0x25 # string"},
{"lineNum":"   95","line":"      DW_AT_prototyped           = 0x27 # flag"},
{"lineNum":"   96","line":"      DW_AT_return_addr          = 0x2a # exprloc, loclistptr"},
{"lineNum":"   97","line":"      DW_AT_start_scope          = 0x2c # constant, rangelistptr"},
{"lineNum":"   98","line":"      DW_AT_bit_stride           = 0x2e # constant, exprloc, reference"},
{"lineNum":"   99","line":"      DW_AT_upper_bound          = 0x2f # constant, exprloc, reference"},
{"lineNum":"  100","line":"      DW_AT_abstract_origin      = 0x31 # reference"},
{"lineNum":"  101","line":"      DW_AT_accessibility        = 0x32 # constant"},
{"lineNum":"  102","line":"      DW_AT_address_class        = 0x33 # constant"},
{"lineNum":"  103","line":"      DW_AT_artificial           = 0x34 # flag"},
{"lineNum":"  104","line":"      DW_AT_base_types           = 0x35 # reference"},
{"lineNum":"  105","line":"      DW_AT_calling_convention   = 0x36 # constant"},
{"lineNum":"  106","line":"      DW_AT_count                = 0x37 # constant, exprloc, reference"},
{"lineNum":"  107","line":"      DW_AT_data_member_location = 0x38 # constant, exprloc, loclistptr"},
{"lineNum":"  108","line":"      DW_AT_decl_column          = 0x39 # constant"},
{"lineNum":"  109","line":"      DW_AT_decl_file            = 0x3a # constant"},
{"lineNum":"  110","line":"      DW_AT_decl_line            = 0x3b # constant"},
{"lineNum":"  111","line":"      DW_AT_declaration          = 0x3c # flag"},
{"lineNum":"  112","line":"      DW_AT_discr_list           = 0x3d # block"},
{"lineNum":"  113","line":"      DW_AT_encoding             = 0x3e # constant"},
{"lineNum":"  114","line":"      DW_AT_external             = 0x3f # flag"},
{"lineNum":"  115","line":"      DW_AT_frame_base           = 0x40 # exprloc, loclistptr"},
{"lineNum":"  116","line":"      DW_AT_friend               = 0x41 # reference"},
{"lineNum":"  117","line":"      DW_AT_identifier_case      = 0x42 # constant"},
{"lineNum":"  118","line":"      DW_AT_macro_info           = 0x43 # macptr"},
{"lineNum":"  119","line":"      DW_AT_namelist_item        = 0x44 # reference"},
{"lineNum":"  120","line":"      DW_AT_priority             = 0x45 # reference"},
{"lineNum":"  121","line":"      DW_AT_segment              = 0x46 # exprloc, loclistptr"},
{"lineNum":"  122","line":"      DW_AT_specification        = 0x47 # reference"},
{"lineNum":"  123","line":"      DW_AT_static_link          = 0x48 # exprloc, loclistptr"},
{"lineNum":"  124","line":"      DW_AT_type                 = 0x49 # reference"},
{"lineNum":"  125","line":"      DW_AT_use_location         = 0x4a # exprloc, loclistptr"},
{"lineNum":"  126","line":"      DW_AT_variable_parameter   = 0x4b # flag"},
{"lineNum":"  127","line":"      DW_AT_virtuality           = 0x4c # constant"},
{"lineNum":"  128","line":"      DW_AT_vtable_elem_location = 0x4d # exprloc, loclistptr"},
{"lineNum":"  129","line":"      DW_AT_allocated            = 0x4e # constant, exprloc, reference"},
{"lineNum":"  130","line":"      DW_AT_associated           = 0x4f # constant, exprloc, reference"},
{"lineNum":"  131","line":"      DW_AT_data_location        = 0x50 # exprloc"},
{"lineNum":"  132","line":"      DW_AT_byte_stride          = 0x51 # constant, exprloc, reference"},
{"lineNum":"  133","line":"      DW_AT_entry_pc             = 0x52 # address"},
{"lineNum":"  134","line":"      DW_AT_use_UTF8             = 0x53 # flag"},
{"lineNum":"  135","line":"      DW_AT_extension            = 0x54 # reference"},
{"lineNum":"  136","line":"      DW_AT_ranges               = 0x55 # rangelistptr"},
{"lineNum":"  137","line":"      DW_AT_trampoline           = 0x56 # address, flag, reference, string"},
{"lineNum":"  138","line":"      DW_AT_call_column          = 0x57 # constant"},
{"lineNum":"  139","line":"      DW_AT_call_file            = 0x58 # constant"},
{"lineNum":"  140","line":"      DW_AT_call_line            = 0x59 # constant"},
{"lineNum":"  141","line":"      DW_AT_description          = 0x5a # string"},
{"lineNum":"  142","line":"      DW_AT_binary_scale         = 0x5b # constant"},
{"lineNum":"  143","line":"      DW_AT_decimal_scale        = 0x5c # constant"},
{"lineNum":"  144","line":"      DW_AT_small                = 0x5d # reference"},
{"lineNum":"  145","line":"      DW_AT_decimal_sign         = 0x5e # constant"},
{"lineNum":"  146","line":"      DW_AT_digit_count          = 0x5f # constant"},
{"lineNum":"  147","line":"      DW_AT_picture_string       = 0x60 # string"},
{"lineNum":"  148","line":"      DW_AT_mutable              = 0x61 # flag"},
{"lineNum":"  149","line":"      DW_AT_threads_scaled       = 0x62 # flag"},
{"lineNum":"  150","line":"      DW_AT_explicit             = 0x63 # flag"},
{"lineNum":"  151","line":"      DW_AT_object_pointer       = 0x64 # reference"},
{"lineNum":"  152","line":"      DW_AT_endianity            = 0x65 # constant"},
{"lineNum":"  153","line":"      DW_AT_elemental            = 0x66 # flag"},
{"lineNum":"  154","line":"      DW_AT_pure                 = 0x67 # flag"},
{"lineNum":"  155","line":"      DW_AT_recursive            = 0x68 # flag"},
{"lineNum":"  156","line":"      DW_AT_signature            = 0x69 # reference"},
{"lineNum":"  157","line":"      DW_AT_main_subprogram      = 0x6a # flag"},
{"lineNum":"  158","line":"      DW_AT_data_bit_offset      = 0x6b # constant"},
{"lineNum":"  159","line":"      DW_AT_const_expr           = 0x6c # flag"},
{"lineNum":"  160","line":"      DW_AT_enum_class           = 0x6d # flag"},
{"lineNum":"  161","line":"      DW_AT_linkage_name         = 0x6e # string"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"      def unknown?"},
{"lineNum":"  164","line":"        AT.from_value?(value).nil?"},
{"lineNum":"  165","line":"      end"},
{"lineNum":"  166","line":"    end"},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"    enum FORM : UInt32"},
{"lineNum":"  169","line":"      Addr        = 0x01 # address"},
{"lineNum":"  170","line":"      Block2      = 0x03 # block"},
{"lineNum":"  171","line":"      Block4      = 0x04 # block"},
{"lineNum":"  172","line":"      Data2       = 0x05 # constant"},
{"lineNum":"  173","line":"      Data4       = 0x06 # constant"},
{"lineNum":"  174","line":"      Data8       = 0x07 # constant"},
{"lineNum":"  175","line":"      String      = 0x08 # string"},
{"lineNum":"  176","line":"      Block       = 0x09 # block"},
{"lineNum":"  177","line":"      Block1      = 0x0a # block"},
{"lineNum":"  178","line":"      Data1       = 0x0b # constant"},
{"lineNum":"  179","line":"      Flag        = 0x0c # flag"},
{"lineNum":"  180","line":"      Sdata       = 0x0d # constant"},
{"lineNum":"  181","line":"      Strp        = 0x0e # string"},
{"lineNum":"  182","line":"      Udata       = 0x0f # constant"},
{"lineNum":"  183","line":"      RefAddr     = 0x10 # reference"},
{"lineNum":"  184","line":"      Ref1        = 0x11 # reference"},
{"lineNum":"  185","line":"      Ref2        = 0x12 # reference"},
{"lineNum":"  186","line":"      Ref4        = 0x13 # reference"},
{"lineNum":"  187","line":"      Ref8        = 0x14 # reference"},
{"lineNum":"  188","line":"      RefUdata    = 0x15 # reference"},
{"lineNum":"  189","line":"      Indirect    = 0x16 # (see Section 7.5.3)"},
{"lineNum":"  190","line":"      SecOffset   = 0x17 # lineptr, loclistptr, macptr, rangelistptr"},
{"lineNum":"  191","line":"      Exprloc     = 0x18 # exprloc"},
{"lineNum":"  192","line":"      FlagPresent = 0x19 # flag"},
{"lineNum":"  193","line":"      RefSig8     = 0x20 # reference"},
{"lineNum":"  194","line":"    end"},
{"lineNum":"  195","line":""},
{"lineNum":"  196","line":"    struct Abbrev"},
{"lineNum":"  197","line":"      record Attribute, at : AT, form : FORM"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"      property code : UInt32"},
{"lineNum":"  200","line":"      property tag : TAG"},
{"lineNum":"  201","line":"      property attributes : Array(Attribute)"},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"      def initialize(@code, @tag, @children : Bool)"},
{"lineNum":"  204","line":"        @attributes = [] of Attribute"},
{"lineNum":"  205","line":"      end"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"      def children?"},
{"lineNum":"  208","line":"        @children"},
{"lineNum":"  209","line":"      end"},
{"lineNum":"  210","line":""},
{"lineNum":"  211","line":"      def self.read(io : IO::FileDescriptor, offset)"},
{"lineNum":"  212","line":"        abbreviations = [] of Abbrev"},
{"lineNum":"  213","line":""},
{"lineNum":"  214","line":"        io.seek(io.tell + offset)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  215","line":"        loop do"},
{"lineNum":"  216","line":"          code = DWARF.read_unsigned_leb128(io)"},
{"lineNum":"  217","line":"          break if code == 0","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"          tag = TAG.new(DWARF.read_unsigned_leb128(io))"},
{"lineNum":"  220","line":"          children = io.read_byte == 1","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  221","line":"          abbrev = Abbrev.new(code, tag, children)"},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"          loop do"},
{"lineNum":"  224","line":"            at = AT.new(DWARF.read_unsigned_leb128(io))"},
{"lineNum":"  225","line":"            form = FORM.new(DWARF.read_unsigned_leb128(io))"},
{"lineNum":"  226","line":"            break if at.value == 0 && form.value == 0"},
{"lineNum":"  227","line":"            abbrev.attributes << Attribute.new(at, form)"},
{"lineNum":"  228","line":"          end"},
{"lineNum":"  229","line":""},
{"lineNum":"  230","line":"          abbreviations << abbrev"},
{"lineNum":"  231","line":"        end"},
{"lineNum":"  232","line":""},
{"lineNum":"  233","line":"        abbreviations"},
{"lineNum":"  234","line":"      end"},
{"lineNum":"  235","line":"    end"},
{"lineNum":"  236","line":"  end"},
{"lineNum":"  237","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:57:27", "instrumented" : 3, "covered" : 0,};
var merged_data = [];
