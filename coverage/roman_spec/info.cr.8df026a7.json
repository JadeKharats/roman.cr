var data = {lines:[
{"lineNum":"    1","line":"require \"../dwarf\""},
{"lineNum":"    2","line":"require \"./abbrev\""},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"module Debug"},
{"lineNum":"    5","line":"  module DWARF"},
{"lineNum":"    6","line":"    struct Info"},
{"lineNum":"    7","line":"      property unit_length : UInt32 | UInt64"},
{"lineNum":"    8","line":"      property version : UInt16"},
{"lineNum":"    9","line":"      property debug_abbrev_offset : UInt32 | UInt64"},
{"lineNum":"   10","line":"      property address_size : UInt8"},
{"lineNum":"   11","line":"      property! abbreviations : Array(Abbrev)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"      property dwarf64 : Bool"},
{"lineNum":"   14","line":"      @offset : LibC::OffT"},
{"lineNum":"   15","line":"      @ref_offset : LibC::OffT"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"      def initialize(@io : IO::FileDescriptor, @offset)"},
{"lineNum":"   18","line":"        @ref_offset = offset"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"        @unit_length = @io.read_bytes(UInt32)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   21","line":"        if @unit_length == 0xffffffff"},
{"lineNum":"   22","line":"          @dwarf64 = true"},
{"lineNum":"   23","line":"          @unit_length = @io.read_bytes(UInt64)"},
{"lineNum":"   24","line":"        else"},
{"lineNum":"   25","line":"          @dwarf64 = false"},
{"lineNum":"   26","line":"        end"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"        @offset = @io.tell"},
{"lineNum":"   29","line":"        @version = @io.read_bytes(UInt16)"},
{"lineNum":"   30","line":"        @debug_abbrev_offset = read_ulong"},
{"lineNum":"   31","line":"        @address_size = @io.read_byte.not_nil!","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   32","line":"      end"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"      alias Value = Bool | Int32 | Int64 | Slice(UInt8) | String | UInt16 | UInt32 | UInt64 | UInt8"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"      def read_abbreviations(io)"},
{"lineNum":"   37","line":"        @abbreviations = Abbrev.read(io, debug_abbrev_offset)"},
{"lineNum":"   38","line":"      end"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"      def each"},
{"lineNum":"   41","line":"        end_offset = @offset + @unit_length"},
{"lineNum":"   42","line":"        attributes = [] of {AT, FORM, Value}"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"        while @io.tell < end_offset"},
{"lineNum":"   45","line":"          code = DWARF.read_unsigned_leb128(@io)"},
{"lineNum":"   46","line":"          attributes.clear"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"          if abbrev = abbreviations[code - 1]? # abbreviations.find { |a| a.code == abbrev }"},
{"lineNum":"   49","line":"            abbrev.attributes.each do |attr|"},
{"lineNum":"   50","line":"              value = read_attribute_value(attr.form)"},
{"lineNum":"   51","line":"              attributes << {attr.at, attr.form, value}"},
{"lineNum":"   52","line":"            end"},
{"lineNum":"   53","line":"            yield code, abbrev, attributes"},
{"lineNum":"   54","line":"          else"},
{"lineNum":"   55","line":"            yield code, nil, attributes"},
{"lineNum":"   56","line":"          end"},
{"lineNum":"   57","line":"        end"},
{"lineNum":"   58","line":"      end"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"      private def read_attribute_value(form)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   61","line":"        case form"},
{"lineNum":"   62","line":"        when FORM::Addr","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   63","line":"          case address_size"},
{"lineNum":"   64","line":"          when 4 then @io.read_bytes(UInt32)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   65","line":"          when 8 then @io.read_bytes(UInt64)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   66","line":"          else        raise \"Invalid address size: #{address_size}\"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   67","line":"          end"},
{"lineNum":"   68","line":"        when FORM::Block1","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   69","line":"          len = @io.read_byte.not_nil!","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   70","line":"          @io.read_fully(bytes = Bytes.new(len.to_i))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"          bytes"},
{"lineNum":"   72","line":"        when FORM::Block2","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   73","line":"          len = @io.read_bytes(UInt16)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"          @io.read_fully(bytes = Bytes.new(len.to_i))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   75","line":"          bytes"},
{"lineNum":"   76","line":"        when FORM::Block4","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   77","line":"          len = @io.read_bytes(UInt32)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   78","line":"          @io.read_fully(bytes = Bytes.new(len.to_i64))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   79","line":"          bytes"},
{"lineNum":"   80","line":"        when FORM::Block","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   81","line":"          len = DWARF.read_unsigned_leb128(@io)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   82","line":"          @io.read_fully(bytes = Bytes.new(len))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   83","line":"          bytes"},
{"lineNum":"   84","line":"        when FORM::Data1","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   85","line":"          @io.read_byte.not_nil!","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   86","line":"        when FORM::Data2","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":"          @io.read_bytes(UInt16)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   88","line":"        when FORM::Data4","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   89","line":"          @io.read_bytes(UInt32)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   90","line":"        when FORM::Data8","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   91","line":"          @io.read_bytes(UInt64)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   92","line":"        when FORM::Sdata","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   93","line":"          DWARF.read_signed_leb128(@io)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   94","line":"        when FORM::Udata","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   95","line":"          DWARF.read_unsigned_leb128(@io)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   96","line":"        when FORM::Exprloc","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   97","line":"          len = DWARF.read_unsigned_leb128(@io)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   98","line":"          @io.read_fully(bytes = Bytes.new(len))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   99","line":"          bytes"},
{"lineNum":"  100","line":"        when FORM::Flag","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  101","line":"          @io.read_byte == 1","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  102","line":"        when FORM::FlagPresent","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  103","line":"          true"},
{"lineNum":"  104","line":"        when FORM::SecOffset"},
{"lineNum":"  105","line":"          read_ulong","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  106","line":"        when FORM::Ref1","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  107","line":"          @ref_offset + @io.read_byte.not_nil!.to_u64","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  108","line":"        when FORM::Ref2","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  109","line":"          @ref_offset + @io.read_bytes(UInt16).to_u64","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  110","line":"        when FORM::Ref4","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":"          @ref_offset + @io.read_bytes(UInt32).to_u64","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  112","line":"        when FORM::Ref8","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  113","line":"          @ref_offset + @io.read_bytes(UInt64).to_u64","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  114","line":"        when FORM::RefUdata","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  115","line":"          @ref_offset + DWARF.read_unsigned_leb128(@io)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":"        when FORM::RefAddr"},
{"lineNum":"  117","line":"          read_ulong","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  118","line":"        when FORM::RefSig8","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  119","line":"          @io.read_bytes(UInt64)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  120","line":"        when FORM::String","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  121","line":"          @io.gets(\'\\0\').to_s.chomp(\'\\0\')","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  122","line":"        when FORM::Strp"},
{"lineNum":"  123","line":"          read_ulong","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"        when FORM::Indirect","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  125","line":"          form = FORM.new(DWARF.read_unsigned_leb128(@io))"},
{"lineNum":"  126","line":"          read_attribute_value(form)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  127","line":"        else"},
{"lineNum":"  128","line":"          raise \"Unknown DW_FORM_#{form.to_s.underscore}\"","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  129","line":"        end"},
{"lineNum":"  130","line":"      end"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"      private def read_ulong"},
{"lineNum":"  133","line":"        if @dwarf64","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  134","line":"          @io.read_bytes(UInt64)"},
{"lineNum":"  135","line":"        else"},
{"lineNum":"  136","line":"          @io.read_bytes(UInt32)","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  137","line":"        end"},
{"lineNum":"  138","line":"      end"},
{"lineNum":"  139","line":"    end"},
{"lineNum":"  140","line":"  end"},
{"lineNum":"  141","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 60, "covered" : 0,};
var merged_data = [];
