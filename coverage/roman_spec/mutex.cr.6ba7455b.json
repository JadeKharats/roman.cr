var data = {lines:[
{"lineNum":"    1","line":"require \"c/pthread\"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"# :nodoc:"},
{"lineNum":"    4","line":"class Thread"},
{"lineNum":"    5","line":"  # :nodoc:"},
{"lineNum":"    6","line":"  class Mutex"},
{"lineNum":"    7","line":"    def initialize"},
{"lineNum":"    8","line":"      if LibC.pthread_mutex_init(out @mutex, nil) != 0"},
{"lineNum":"    9","line":"        raise Errno.new(\"pthread_mutex_init\")"},
{"lineNum":"   10","line":"      end"},
{"lineNum":"   11","line":"    end"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"    def lock"},
{"lineNum":"   14","line":"      if LibC.pthread_mutex_lock(self) != 0"},
{"lineNum":"   15","line":"        raise Errno.new(\"pthread_mutex_lock\")"},
{"lineNum":"   16","line":"      end"},
{"lineNum":"   17","line":"    end"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"    def try_lock"},
{"lineNum":"   20","line":"      if LibC.pthread_mutex_trylock(self) != 0"},
{"lineNum":"   21","line":"        raise Errno.new(\"pthread_mutex_trylock\")"},
{"lineNum":"   22","line":"      end"},
{"lineNum":"   23","line":"    end"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"    def unlock"},
{"lineNum":"   26","line":"      if LibC.pthread_mutex_unlock(self) != 0"},
{"lineNum":"   27","line":"        raise Errno.new(\"pthread_mutex_unlock\")"},
{"lineNum":"   28","line":"      end"},
{"lineNum":"   29","line":"    end"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"    def synchronize"},
{"lineNum":"   32","line":"      lock"},
{"lineNum":"   33","line":"      yield self"},
{"lineNum":"   34","line":"    ensure"},
{"lineNum":"   35","line":"      unlock"},
{"lineNum":"   36","line":"    end"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"    def finalize"},
{"lineNum":"   39","line":"      if LibC.pthread_mutex_destroy(self) != 0"},
{"lineNum":"   40","line":"        raise Errno.new(\"pthread_mutex_destroy\")"},
{"lineNum":"   41","line":"      end"},
{"lineNum":"   42","line":"    end"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"    def to_unsafe"},
{"lineNum":"   45","line":"      pointerof(@mutex)"},
{"lineNum":"   46","line":"    end"},
{"lineNum":"   47","line":"  end"},
{"lineNum":"   48","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
