var data = {lines:[
{"lineNum":"    1","line":"# An `IO` which writes to a number of underlying writer IOs."},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# ```"},
{"lineNum":"    4","line":"# io1 = IO::Memory.new"},
{"lineNum":"    5","line":"# io2 = IO::Memory.new"},
{"lineNum":"    6","line":"# writer = IO::MultiWriter.new(io1, io2)"},
{"lineNum":"    7","line":"# writer.puts \"foo bar\""},
{"lineNum":"    8","line":"# io1.to_s # => \"foo bar\\n\""},
{"lineNum":"    9","line":"# io2.to_s # => \"foo bar\\n\""},
{"lineNum":"   10","line":"# ```"},
{"lineNum":"   11","line":"class IO::MultiWriter < IO"},
{"lineNum":"   12","line":"  # If `#sync_close?` is `true`, closing this `IO` will close all of the underlying"},
{"lineNum":"   13","line":"  # IOs."},
{"lineNum":"   14","line":"  property? sync_close"},
{"lineNum":"   15","line":"  getter? closed = false"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"  @writers : Array(IO)"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"  # Creates a new `IO::MultiWriter` which writes to *writers*. If"},
{"lineNum":"   20","line":"  # *sync_close* is set, calling `#close` calls `#close` on all underlying"},
{"lineNum":"   21","line":"  # writers."},
{"lineNum":"   22","line":"  def initialize(@writers : Array(IO), @sync_close = false)"},
{"lineNum":"   23","line":"  end"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"  # Creates a new `IO::MultiWriter` which writes to *writers*. If"},
{"lineNum":"   26","line":"  # *sync_close* is set, calling `#close` calls `#close` on all underlying"},
{"lineNum":"   27","line":"  # writers."},
{"lineNum":"   28","line":"  def initialize(*writers : IO, @sync_close = false)"},
{"lineNum":"   29","line":"    @writers = writers.map(&.as(IO)).to_a"},
{"lineNum":"   30","line":"  end"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"  def write(slice : Bytes)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   33","line":"    check_open","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"    @writers.each { |writer| writer.write(slice) }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   36","line":"  end"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"  def read(slice : Bytes)"},
{"lineNum":"   39","line":"    raise IO::Error.new(\"Can\'t read from IO::MultiWriter\")"},
{"lineNum":"   40","line":"  end"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"  def close","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":"    return if @closed","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   44","line":"    @closed = true","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"    @writers.each { |writer| writer.close } if sync_close?","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   47","line":"  end"},
{"lineNum":"   48","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 7, "covered" : 0,};
var merged_data = [];
