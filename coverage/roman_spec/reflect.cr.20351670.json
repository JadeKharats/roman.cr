var data = {lines:[
{"lineNum":"    1","line":"# NOTE: This type might be removed."},
{"lineNum":"    2","line":"# :nodoc:"},
{"lineNum":"    3","line":"struct Reflect(X)"},
{"lineNum":"    4","line":"  # For now it\'s just a way to implement `Enumerable#sum` in a way that the"},
{"lineNum":"    5","line":"  # initial value given to it has the type of the first type in the union,"},
{"lineNum":"    6","line":"  # if the type is a union."},
{"lineNum":"    7","line":"  def self.first","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"    8","line":"    {% if X.union? %}"},
{"lineNum":"    9","line":"      {{X.union_types.first}}"},
{"lineNum":"   10","line":"    {% else %}"},
{"lineNum":"   11","line":"      X"},
{"lineNum":"   12","line":"    {% end %}"},
{"lineNum":"   13","line":"  end"},
{"lineNum":"   14","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:20:30", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
