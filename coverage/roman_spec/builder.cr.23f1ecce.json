var data = {lines:[
{"lineNum":"    1","line":"# An XML builder generates valid XML."},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# An `XML::Error` is raised if attempting to generate"},
{"lineNum":"    4","line":"# an invalid XML (for example, if invoking `end_element`"},
{"lineNum":"    5","line":"# without a matching `start_element`, or trying to use"},
{"lineNum":"    6","line":"# a non-string value as an object\'s field name)"},
{"lineNum":"    7","line":"struct XML::Builder"},
{"lineNum":"    8","line":"  @box : Void*"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"  # Creates a builder that writes to the given *io*."},
{"lineNum":"   11","line":"  def initialize(io : IO)"},
{"lineNum":"   12","line":"    @box = Box.box(io)"},
{"lineNum":"   13","line":"    buffer = LibXML.xmlOutputBufferCreateIO(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   14","line":"      ->(ctx, buffer, len) {"},
{"lineNum":"   15","line":"        Box(IO).unbox(ctx).write(Slice.new(buffer, len))"},
{"lineNum":"   16","line":"        len"},
{"lineNum":"   17","line":"      },"},
{"lineNum":"   18","line":"      ->(ctx) {"},
{"lineNum":"   19","line":"        Box(IO).unbox(ctx).flush"},
{"lineNum":"   20","line":"        0"},
{"lineNum":"   21","line":"      },"},
{"lineNum":"   22","line":"      @box,"},
{"lineNum":"   23","line":"      nil"},
{"lineNum":"   24","line":"    )"},
{"lineNum":"   25","line":"    @writer = LibXML.xmlNewTextWriter(buffer)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   26","line":"  end"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"  # Emits the start of the document."},
{"lineNum":"   29","line":"  def start_document(version = nil, encoding = nil) : Nil"},
{"lineNum":"   30","line":"    call StartDocument, string_to_unsafe(version), string_to_unsafe(encoding), nil","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   31","line":"  end"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"  # Emits the end of a document."},
{"lineNum":"   34","line":"  def end_document : Nil"},
{"lineNum":"   35","line":"    call EndDocument","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   36","line":"  end"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"  # Emits the start of the document, invokes the block,"},
{"lineNum":"   39","line":"  # and then emits the end of the document."},
{"lineNum":"   40","line":"  def document(version = nil, encoding = nil)"},
{"lineNum":"   41","line":"    start_document version, encoding"},
{"lineNum":"   42","line":"    yield.tap { end_document }"},
{"lineNum":"   43","line":"  end"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"  # Emits the start of an element."},
{"lineNum":"   46","line":"  def start_element(name : String) : Nil"},
{"lineNum":"   47","line":"    call StartElement, string_to_unsafe(name)","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   48","line":"  end"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"  # Emits the start of an element with namespace info."},
{"lineNum":"   51","line":"  def start_element(prefix : String?, name : String, namespace_uri : String?) : Nil"},
{"lineNum":"   52","line":"    call StartElementNS, string_to_unsafe(prefix), string_to_unsafe(name), string_to_unsafe(namespace_uri)"},
{"lineNum":"   53","line":"  end"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"  # Emits the end of an element."},
{"lineNum":"   56","line":"  def end_element : Nil"},
{"lineNum":"   57","line":"    call EndElement","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   58","line":"  end"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"  # Emits the start of an element with the given *attributes*,"},
{"lineNum":"   61","line":"  # invokes the block and then emits the end of the element."},
{"lineNum":"   62","line":"  def element(__name__ : String, **attributes)"},
{"lineNum":"   63","line":"    element(__name__, attributes) do"},
{"lineNum":"   64","line":"      yield"},
{"lineNum":"   65","line":"    end"},
{"lineNum":"   66","line":"  end"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"  # ditto"},
{"lineNum":"   69","line":"  def element(__name__ : String, attributes : Hash | NamedTuple)"},
{"lineNum":"   70","line":"    start_element __name__"},
{"lineNum":"   71","line":"    attributes(attributes)"},
{"lineNum":"   72","line":"    yield.tap { end_element }"},
{"lineNum":"   73","line":"  end"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"  # Emits an element with the given *attributes*."},
{"lineNum":"   76","line":"  def element(__name__ : String, **attributes)"},
{"lineNum":"   77","line":"    element(__name__, attributes)"},
{"lineNum":"   78","line":"  end"},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"  # ditto"},
{"lineNum":"   81","line":"  def element(name : String, attributes : Hash | NamedTuple)"},
{"lineNum":"   82","line":"    element(name, attributes) { }"},
{"lineNum":"   83","line":"  end"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"  # Emits the start of an element with namespace info with the given *attributes*,"},
{"lineNum":"   86","line":"  # invokes the block and then emits the end of the element."},
{"lineNum":"   87","line":"  def element(__prefix__ : String?, __name__ : String, __namespace_uri__ : String?, **attributes)"},
{"lineNum":"   88","line":"    element(__prefix__, __name__, __namespace_uri__, attributes) do"},
{"lineNum":"   89","line":"      yield"},
{"lineNum":"   90","line":"    end"},
{"lineNum":"   91","line":"  end"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"  # ditto"},
{"lineNum":"   94","line":"  def element(__prefix__ : String?, __name__ : String, __namespace_uri__ : String?, attributes : Hash | NamedTuple)"},
{"lineNum":"   95","line":"    start_element __prefix__, __name__, __namespace_uri__"},
{"lineNum":"   96","line":"    attributes(attributes)"},
{"lineNum":"   97","line":"    yield.tap { end_element }"},
{"lineNum":"   98","line":"  end"},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"  # Emits an element with namespace info with the given *attributes*."},
{"lineNum":"  101","line":"  def element(prefix : String?, name : String, namespace_uri : String?, **attributes)"},
{"lineNum":"  102","line":"    element(prefix, name, namespace_uri, attributes)"},
{"lineNum":"  103","line":"  end"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"  # ditto"},
{"lineNum":"  106","line":"  def element(prefix : String?, name : String, namespace_uri : String?, attributes : Hash | NamedTuple)"},
{"lineNum":"  107","line":"    start_element(prefix, name, namespace_uri)"},
{"lineNum":"  108","line":"    attributes(attributes)"},
{"lineNum":"  109","line":"    end_element"},
{"lineNum":"  110","line":"  end"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"  # Emits the start of an attribute."},
{"lineNum":"  113","line":"  def start_attribute(name : String) : Nil"},
{"lineNum":"  114","line":"    call StartAttribute, string_to_unsafe(name)"},
{"lineNum":"  115","line":"  end"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"  # Emits the start of an attribute with namespace info."},
{"lineNum":"  118","line":"  def start_attribute(prefix : String?, name : String, namespace_uri : String?)"},
{"lineNum":"  119","line":"    call StartAttributeNS, string_to_unsafe(prefix), string_to_unsafe(name), string_to_unsafe(namespace_uri)"},
{"lineNum":"  120","line":"  end"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"  # Emits the end of an attribute."},
{"lineNum":"  123","line":"  def end_attribute : Nil"},
{"lineNum":"  124","line":"    call EndAttribute"},
{"lineNum":"  125","line":"  end"},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"  # Emits the start of an attribute, invokes the block,"},
{"lineNum":"  128","line":"  # and then emits the end of the attribute."},
{"lineNum":"  129","line":"  def attribute(*args, **nargs)"},
{"lineNum":"  130","line":"    start_attribute *args, **nargs"},
{"lineNum":"  131","line":"    yield.tap { end_attribute }"},
{"lineNum":"  132","line":"  end"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"  # Emits an attribute with a *value*."},
{"lineNum":"  135","line":"  def attribute(name : String, value) : Nil","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  136","line":"    call WriteAttribute, string_to_unsafe(name), string_to_unsafe(value.to_s)","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  137","line":"  end"},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"  # Emits an attribute with namespace info and a *value*."},
{"lineNum":"  140","line":"  def attribute(prefix : String?, name : String, namespace_uri : String?, value) : Nil"},
{"lineNum":"  141","line":"    call WriteAttributeNS, string_to_unsafe(prefix), string_to_unsafe(name), string_to_unsafe(namespace_uri), string_to_unsafe(value.to_s)"},
{"lineNum":"  142","line":"  end"},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"  # Emits the given *attributes* with their values."},
{"lineNum":"  145","line":"  def attributes(**attributes)"},
{"lineNum":"  146","line":"    attributes(attributes)"},
{"lineNum":"  147","line":"  end"},
{"lineNum":"  148","line":""},
{"lineNum":"  149","line":"  # ditto"},
{"lineNum":"  150","line":"  def attributes(attributes : Hash | NamedTuple)"},
{"lineNum":"  151","line":"    attributes.each do |key, value|","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  152","line":"      attribute key.to_s, value","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  153","line":"    end"},
{"lineNum":"  154","line":"  end"},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"  # Emits text content."},
{"lineNum":"  157","line":"  #"},
{"lineNum":"  158","line":"  # Text content can happen inside of an `element`, `attribute` value, `cdata`, `dtd`, etc."},
{"lineNum":"  159","line":"  def text(content : String) : Nil"},
{"lineNum":"  160","line":"    call WriteString, string_to_unsafe(content)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  161","line":"  end"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"  # Emits the start of a `CDATA` section."},
{"lineNum":"  164","line":"  def start_cdata : Nil"},
{"lineNum":"  165","line":"    call StartCDATA"},
{"lineNum":"  166","line":"  end"},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"  # Emits the end of a `CDATA` section."},
{"lineNum":"  169","line":"  def end_cdata : Nil"},
{"lineNum":"  170","line":"    call EndCDATA"},
{"lineNum":"  171","line":"  end"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"  # Emits the start of a `CDATA` section, invokes the block"},
{"lineNum":"  174","line":"  # and then emits the end of the `CDATA` section."},
{"lineNum":"  175","line":"  def cdata"},
{"lineNum":"  176","line":"    start_cdata"},
{"lineNum":"  177","line":"    yield.tap { end_cdata }"},
{"lineNum":"  178","line":"  end"},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"  # Emits a `CDATA` section."},
{"lineNum":"  181","line":"  def cdata(text : String) : Nil"},
{"lineNum":"  182","line":"    call WriteCDATA, string_to_unsafe(text)"},
{"lineNum":"  183","line":"  end"},
{"lineNum":"  184","line":""},
{"lineNum":"  185","line":"  # Emits the start of a comment."},
{"lineNum":"  186","line":"  def start_comment : Nil"},
{"lineNum":"  187","line":"    call StartComment"},
{"lineNum":"  188","line":"  end"},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"  # Emits the end of a comment."},
{"lineNum":"  191","line":"  def end_comment : Nil"},
{"lineNum":"  192","line":"    call EndComment"},
{"lineNum":"  193","line":"  end"},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"  # Emits the start of a comment, invokes the block"},
{"lineNum":"  196","line":"  # and then emits the end of the comment."},
{"lineNum":"  197","line":"  def comment"},
{"lineNum":"  198","line":"    start_comment"},
{"lineNum":"  199","line":"    yield.tap { end_comment }"},
{"lineNum":"  200","line":"  end"},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"  # Emits a comment."},
{"lineNum":"  203","line":"  def comment(text : String) : Nil"},
{"lineNum":"  204","line":"    call WriteComment, string_to_unsafe(text)"},
{"lineNum":"  205","line":"  end"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"  # Emits the start of a `DTD`."},
{"lineNum":"  208","line":"  def start_dtd(name : String, pubid : String, sysid : String) : Nil"},
{"lineNum":"  209","line":"    call StartDTD, string_to_unsafe(name), string_to_unsafe(pubid), string_to_unsafe(sysid)"},
{"lineNum":"  210","line":"  end"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"  # Emits the end of a `DTD`."},
{"lineNum":"  213","line":"  def end_dtd : Nil"},
{"lineNum":"  214","line":"    call EndDTD"},
{"lineNum":"  215","line":"  end"},
{"lineNum":"  216","line":""},
{"lineNum":"  217","line":"  # Emits the start of a `DTD`, invokes the block"},
{"lineNum":"  218","line":"  # and then emits the end of the `DTD`."},
{"lineNum":"  219","line":"  def dtd(name : String, pubid : String, sysid : String) : Nil"},
{"lineNum":"  220","line":"    start_dtd name, pubid, sysid"},
{"lineNum":"  221","line":"    yield.tap { end_dtd }"},
{"lineNum":"  222","line":"  end"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"  # Emits a `DTD`."},
{"lineNum":"  225","line":"  def dtd(name : String, pubid : String, sysid : String, subset : String? = nil) : Nil"},
{"lineNum":"  226","line":"    call WriteDTD, string_to_unsafe(name), string_to_unsafe(pubid), string_to_unsafe(sysid), string_to_unsafe(subset)"},
{"lineNum":"  227","line":"  end"},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"  # Emits a namespace."},
{"lineNum":"  230","line":"  def namespace(prefix, uri)"},
{"lineNum":"  231","line":"    attribute prefix, \"xmlns\", nil, uri"},
{"lineNum":"  232","line":"  end"},
{"lineNum":"  233","line":""},
{"lineNum":"  234","line":"  # Forces content written to this writer to be flushed to"},
{"lineNum":"  235","line":"  # this writer\'s `IO`."},
{"lineNum":"  236","line":"  def flush"},
{"lineNum":"  237","line":"    call Flush","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  238","line":"  end"},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":"  # Sets the indent string."},
{"lineNum":"  241","line":"  def indent=(str : String)"},
{"lineNum":"  242","line":"    if str.empty?"},
{"lineNum":"  243","line":"      call SetIndent, 0"},
{"lineNum":"  244","line":"    else"},
{"lineNum":"  245","line":"      call SetIndent, 1"},
{"lineNum":"  246","line":"      call SetIndentString, string_to_unsafe(str)"},
{"lineNum":"  247","line":"    end"},
{"lineNum":"  248","line":"  end"},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":"  # Sets the indent *level* (number of spaces)."},
{"lineNum":"  251","line":"  def indent=(level : Int)"},
{"lineNum":"  252","line":"    if level <= 0"},
{"lineNum":"  253","line":"      call SetIndent, 0"},
{"lineNum":"  254","line":"    else"},
{"lineNum":"  255","line":"      call SetIndent, 1","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  256","line":"      call SetIndentString, \" \" * level","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  257","line":"    end"},
{"lineNum":"  258","line":"  end"},
{"lineNum":"  259","line":""},
{"lineNum":"  260","line":"  # Sets the quote char to use, either `\'` or `\"`."},
{"lineNum":"  261","line":"  def quote_char=(char : Char)"},
{"lineNum":"  262","line":"    unless char == \'\\\'\' || char == \'\"\'"},
{"lineNum":"  263","line":"      raise ArgumentError.new(\"Quote char must be \' or \\\", not #{char}\")"},
{"lineNum":"  264","line":"    end"},
{"lineNum":"  265","line":""},
{"lineNum":"  266","line":"    call SetQuoteChar, char.ord"},
{"lineNum":"  267","line":"  end"},
{"lineNum":"  268","line":""},
{"lineNum":"  269","line":"  private macro call(name, *args)"},
{"lineNum":"  270","line":"    ret = LibXML.xmlTextWriter{{name}}(@writer, {{*args}})"},
{"lineNum":"  271","line":"    check ret, {{@def.name.stringify}}"},
{"lineNum":"  272","line":"  end"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"  private def check(ret, msg)"},
{"lineNum":"  275","line":"    raise XML::Error.new(\"Error in #{msg}\", 0) if ret < 0","class":"lineNoCov","hits":"0","possible_hits":"70",},
{"lineNum":"  276","line":"  end"},
{"lineNum":"  277","line":""},
{"lineNum":"  278","line":"  private def string_to_unsafe(string : String)"},
{"lineNum":"  279","line":"    raise XML::Error.new(\"String cannot contain null character\", 0) if string.includes? \'\\0\'","class":"lineNoCov","hits":"0","possible_hits":"23",},
{"lineNum":"  280","line":"    string.to_unsafe"},
{"lineNum":"  281","line":"  end"},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"  private def string_to_unsafe(string : Nil)"},
{"lineNum":"  284","line":"    Pointer(UInt8).null"},
{"lineNum":"  285","line":"  end"},
{"lineNum":"  286","line":"end"},
{"lineNum":"  287","line":""},
{"lineNum":"  288","line":"module XML"},
{"lineNum":"  289","line":"  # Returns the resulting `String` of writing XML to the yielded `XML::Builder`."},
{"lineNum":"  290","line":"  #"},
{"lineNum":"  291","line":"  # ```"},
{"lineNum":"  292","line":"  # require \"xml\""},
{"lineNum":"  293","line":"  #"},
{"lineNum":"  294","line":"  # string = XML.build(indent: \"  \") do |xml|"},
{"lineNum":"  295","line":"  #   xml.element(\"person\", id: 1) do"},
{"lineNum":"  296","line":"  #     xml.element(\"firstname\") { xml.text \"Jane\" }"},
{"lineNum":"  297","line":"  #     xml.element(\"lastname\") { xml.text \"Doe\" }"},
{"lineNum":"  298","line":"  #   end"},
{"lineNum":"  299","line":"  # end"},
{"lineNum":"  300","line":"  #"},
{"lineNum":"  301","line":"  # string # => \"<?xml version=\\\"1.0\\\"?>\\n<person id=\\\"1\\\">\\n  <firstname>Jane</firstname>\\n  <lastname>Doe</lastname>\\n</person>\\n\""},
{"lineNum":"  302","line":"  # ```"},
{"lineNum":"  303","line":"  def self.build(version : String? = nil, encoding : String? = nil, indent = nil, quote_char = nil)"},
{"lineNum":"  304","line":"    String.build do |str|"},
{"lineNum":"  305","line":"      build(str, version, encoding, indent, quote_char) do |xml|"},
{"lineNum":"  306","line":"        yield xml"},
{"lineNum":"  307","line":"      end"},
{"lineNum":"  308","line":"    end"},
{"lineNum":"  309","line":"  end"},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":"  # Writes XML into the given `IO`. An `XML::Builder` is yielded to the block."},
{"lineNum":"  312","line":"  def self.build(io : IO, version : String? = nil, encoding : String? = nil, indent = nil, quote_char = nil)"},
{"lineNum":"  313","line":"    xml = XML::Builder.new(io)"},
{"lineNum":"  314","line":"    xml.indent = indent if indent"},
{"lineNum":"  315","line":"    xml.quote_char = quote_char if quote_char"},
{"lineNum":"  316","line":"    v = xml.document(version, encoding) do"},
{"lineNum":"  317","line":"      yield xml"},
{"lineNum":"  318","line":"    end"},
{"lineNum":"  319","line":"    xml.flush"},
{"lineNum":"  320","line":"    v"},
{"lineNum":"  321","line":"  end"},
{"lineNum":"  322","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 16, "covered" : 0,};
var merged_data = [];
