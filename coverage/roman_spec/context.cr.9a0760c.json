var data = {lines:[
{"lineNum":"    1","line":"module Spec"},
{"lineNum":"    2","line":"  # :nodoc:"},
{"lineNum":"    3","line":"  abstract class Context"},
{"lineNum":"    4","line":"  end"},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"  # :nodoc:"},
{"lineNum":"    7","line":"  record Result,","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"    8","line":"    kind : Symbol,"},
{"lineNum":"    9","line":"    description : String,"},
{"lineNum":"   10","line":"    file : String,"},
{"lineNum":"   11","line":"    line : Int32,"},
{"lineNum":"   12","line":"    elapsed : Time::Span?,"},
{"lineNum":"   13","line":"    exception : Exception?"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"  # :nodoc:"},
{"lineNum":"   16","line":"  class RootContext < Context"},
{"lineNum":"   17","line":"    def initialize","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   18","line":"      @results = {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   19","line":"        success: [] of Result,"},
{"lineNum":"   20","line":"        fail:    [] of Result,"},
{"lineNum":"   21","line":"        error:   [] of Result,"},
{"lineNum":"   22","line":"        pending: [] of Result,"},
{"lineNum":"   23","line":"      }"},
{"lineNum":"   24","line":"    end"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"    def parent"},
{"lineNum":"   27","line":"      nil"},
{"lineNum":"   28","line":"    end"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"    def succeeded"},
{"lineNum":"   31","line":"      @results[:fail].empty? && @results[:error].empty?","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   32","line":"    end"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"    def self.report(kind, full_description, file, line, elapsed = nil, ex = nil)"},
{"lineNum":"   35","line":"      result = Result.new(kind, full_description, file, line, elapsed, ex)"},
{"lineNum":"   36","line":"      @@contexts_stack.last.report(result)","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   37","line":"    end"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"    def report(result)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   40","line":"      Spec.formatters.each(&.report(result))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"      @results[result.kind] << result","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":"    end"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"    def self.print_results(elapsed_time)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   46","line":"      @@instance.print_results(elapsed_time)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   47","line":"    end"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"    def self.succeeded","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   50","line":"      @@instance.succeeded"},
{"lineNum":"   51","line":"    end"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"    def print_results(elapsed_time)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   54","line":"      Spec.formatters.each(&.finish)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"      pendings = @results[:pending]"},
{"lineNum":"   57","line":"      unless pendings.empty?"},
{"lineNum":"   58","line":"        puts"},
{"lineNum":"   59","line":"        puts \"Pending:\""},
{"lineNum":"   60","line":"        pendings.each do |pending|"},
{"lineNum":"   61","line":"          puts Spec.color(\"  #{pending.description}\", :pending)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   62","line":"        end"},
{"lineNum":"   63","line":"      end"},
{"lineNum":"   64","line":""},
{"lineNum":"   65","line":"      failures = @results[:fail]","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   66","line":"      errors = @results[:error]"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"      failures_and_errors = failures + errors"},
{"lineNum":"   69","line":"      unless failures_and_errors.empty?","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   70","line":"        puts"},
{"lineNum":"   71","line":"        puts \"Failures:\""},
{"lineNum":"   72","line":"        failures_and_errors.each_with_index do |fail, i|"},
{"lineNum":"   73","line":"          if ex = fail.exception","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"            puts"},
{"lineNum":"   75","line":"            puts \"#{(i + 1).to_s.rjust(3, \' \')}) #{fail.description}\"","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"            if ex.is_a?(AssertionFailed)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   78","line":"              source_line = Spec.read_line(ex.file, ex.line)"},
{"lineNum":"   79","line":"              if source_line","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   80","line":"                puts Spec.color(\"     Failure/Error: #{source_line.strip}\", :error)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   81","line":"              end"},
{"lineNum":"   82","line":"            end"},
{"lineNum":"   83","line":"            puts"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"            ex.to_s.split(\"\\n\").each do |line|","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":"              print \"       \"","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":"              puts Spec.color(line, :error)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   88","line":"            end"},
{"lineNum":"   89","line":"            unless ex.is_a?(AssertionFailed)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   90","line":"              ex.backtrace.each do |trace|"},
{"lineNum":"   91","line":"                print \"       \"","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   92","line":"                puts Spec.color(trace, :error)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   93","line":"              end"},
{"lineNum":"   94","line":"            end"},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"            if ex.is_a?(AssertionFailed)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   97","line":"              puts"},
{"lineNum":"   98","line":"              puts Spec.color(\"     # #{Spec.relative_file(ex.file)}:#{ex.line}\", :comment)","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   99","line":"            end"},
{"lineNum":"  100","line":"          end"},
{"lineNum":"  101","line":"        end"},
{"lineNum":"  102","line":"      end"},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"      if Spec.slowest","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  105","line":"        puts","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  106","line":"        results = @results[:success] + @results[:fail]"},
{"lineNum":"  107","line":"        top_n = results.sort_by { |res| -res.elapsed.not_nil!.to_f }[0..Spec.slowest.not_nil!]","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  108","line":"        top_n_time = top_n.sum &.elapsed.not_nil!.total_seconds","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  109","line":"        percent = (top_n_time * 100) / elapsed_time.total_seconds","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  110","line":"        puts \"Top #{Spec.slowest} slowest examples (#{top_n_time} seconds, #{percent.round(2)}% of total time):\"","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":"        top_n.each do |res|"},
{"lineNum":"  112","line":"          puts \"  #{res.description}\"","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  113","line":"          res_elapsed = res.elapsed.not_nil!.total_seconds.to_s","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  114","line":"          if Spec.use_colors?","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  115","line":"            res_elapsed = res_elapsed.colorize.bold","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":"          end"},
{"lineNum":"  117","line":"          puts \"    #{res_elapsed} seconds #{Spec.relative_file(res.file)}:#{res.line}\"","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  118","line":"        end"},
{"lineNum":"  119","line":"      end"},
{"lineNum":"  120","line":""},
{"lineNum":"  121","line":"      puts","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"      success = @results[:success]","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"      total = pendings.size + failures.size + errors.size + success.size"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"      final_status = case","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  127","line":"                     when (failures.size + errors.size) > 0 then :fail"},
{"lineNum":"  128","line":"                     when pendings.size > 0                 then :pending"},
{"lineNum":"  129","line":"                     else                                        :success"},
{"lineNum":"  130","line":"                     end","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"      puts \"Finished in #{Spec.to_human(elapsed_time)}\"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  133","line":"      puts Spec.color(\"#{total} examples, #{failures.size} failures, #{errors.size} errors, #{pendings.size} pending\", final_status)","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  134","line":""},
{"lineNum":"  135","line":"      unless failures_and_errors.empty?"},
{"lineNum":"  136","line":"        puts"},
{"lineNum":"  137","line":"        puts \"Failed examples:\""},
{"lineNum":"  138","line":"        puts"},
{"lineNum":"  139","line":"        failures_and_errors.each do |fail|"},
{"lineNum":"  140","line":"          print Spec.color(\"crystal spec #{Spec.relative_file(fail.file)}:#{fail.line}\", :error)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  141","line":"          puts Spec.color(\" # #{fail.description}\", :comment)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  142","line":"        end"},
{"lineNum":"  143","line":"      end"},
{"lineNum":"  144","line":"    end"},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"    @@instance = RootContext.new"},
{"lineNum":"  147","line":"    @@contexts_stack = [@@instance] of Context"},
{"lineNum":"  148","line":""},
{"lineNum":"  149","line":"    def self.describe(description, file, line, &block)","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  150","line":"      describe = Spec::NestedContext.new(description, file, line, @@contexts_stack.last)"},
{"lineNum":"  151","line":"      @@contexts_stack.push describe"},
{"lineNum":"  152","line":"      Spec.formatters.each(&.push(describe))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  153","line":"      block.call"},
{"lineNum":"  154","line":"      Spec.formatters.each(&.pop)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  155","line":"      @@contexts_stack.pop"},
{"lineNum":"  156","line":"    end"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"    def self.matches?(description, pattern, line, locations)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  159","line":"      @@contexts_stack.any?(&.matches?(pattern, line, locations)) || description =~ pattern","class":"lineNoCov","hits":"0","possible_hits":"31",},
{"lineNum":"  160","line":"    end"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"    def matches?(pattern, line, locations)"},
{"lineNum":"  163","line":"      false"},
{"lineNum":"  164","line":"    end"},
{"lineNum":"  165","line":"  end"},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":"  # :nodoc:"},
{"lineNum":"  168","line":"  class NestedContext < Context"},
{"lineNum":"  169","line":"    getter parent : Context"},
{"lineNum":"  170","line":"    getter description : String"},
{"lineNum":"  171","line":"    getter file : String"},
{"lineNum":"  172","line":"    getter line : Int32"},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"    def initialize(@description : String, @file, @line, @parent)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  175","line":"    end"},
{"lineNum":"  176","line":""},
{"lineNum":"  177","line":"    def report(result)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  178","line":"      @parent.report Result.new(result.kind, \"#{@description} #{result.description}\", result.file, result.line, result.elapsed, result.exception)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  179","line":"    end"},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"    def matches?(pattern, line, locations)","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  182","line":"      return true if @description =~ pattern","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  183","line":"      return true if @line == line","class":"lineNoCov","hits":"0","possible_hits":"31",},
{"lineNum":"  184","line":""},
{"lineNum":"  185","line":"      if locations","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  186","line":"        lines = locations[@file]?"},
{"lineNum":"  187","line":"        return true unless lines","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  188","line":"        return lines.includes?(@line)"},
{"lineNum":"  189","line":"      end"},
{"lineNum":"  190","line":""},
{"lineNum":"  191","line":"      false"},
{"lineNum":"  192","line":"    end"},
{"lineNum":"  193","line":"  end"},
{"lineNum":"  194","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 61, "covered" : 0,};
var merged_data = [];
