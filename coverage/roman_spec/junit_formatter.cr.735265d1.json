var data = {lines:[
{"lineNum":"    1","line":"require \"xml\""},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"module Spec"},
{"lineNum":"    4","line":"  # :nodoc:"},
{"lineNum":"    5","line":"  class JUnitFormatter < Formatter"},
{"lineNum":"    6","line":"    @output : IO"},
{"lineNum":"    7","line":"    @results = [] of Spec::Result","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    8","line":"    @summary = {} of Symbol => Int32","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"    def initialize(@output)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   11","line":"    end"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"    def push(context)"},
{"lineNum":"   14","line":"    end"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"    def pop"},
{"lineNum":"   17","line":"    end"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"    def before_example(description)"},
{"lineNum":"   20","line":"    end"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"    def report(result)"},
{"lineNum":"   23","line":"      current = @summary[result.kind]? || 0","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   24","line":"      @summary[result.kind] = current + 1","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   25","line":"      @results << result","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   26","line":"    end"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"    def finish","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"      io = @output","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"      XML.build(io, indent: 2) do |xml|"},
{"lineNum":"   32","line":"        attributes = {"},
{"lineNum":"   33","line":"          tests:  @results.size,"},
{"lineNum":"   34","line":"          errors: @summary[:error]? || 0,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   35","line":"          failed: @summary[:fail]? || 0,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   36","line":"        }"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"        xml.element(\"testsuite\", attributes) do"},
{"lineNum":"   39","line":"          @results.each { |r| write_report(r, xml) }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   40","line":"        end"},
{"lineNum":"   41","line":"      end","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   42","line":"    ensure"},
{"lineNum":"   43","line":"      io.try &.close","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"   44","line":"    end"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"    def self.file(output_dir)"},
{"lineNum":"   47","line":"      Dir.mkdir_p(output_dir)"},
{"lineNum":"   48","line":"      output_file_path = File.join(output_dir, \"output.xml\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   49","line":"      file = File.new(output_file_path, \"w\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   50","line":"      JUnitFormatter.new(file)"},
{"lineNum":"   51","line":"    end"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"    private def write_report(result, xml)"},
{"lineNum":"   54","line":"      attributes = {"},
{"lineNum":"   55","line":"        file:      result.file,"},
{"lineNum":"   56","line":"        classname: classname(result),"},
{"lineNum":"   57","line":"        name:      result.description,"},
{"lineNum":"   58","line":"      }"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"      xml.element(\"testcase\", attributes) do"},
{"lineNum":"   61","line":"        if tag = inner_content_tag(result.kind)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   62","line":"          if ex = result.exception","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   63","line":"            write_inner_content(tag, ex, xml)"},
{"lineNum":"   64","line":"          else"},
{"lineNum":"   65","line":"            xml.element(tag)"},
{"lineNum":"   66","line":"          end"},
{"lineNum":"   67","line":"        end"},
{"lineNum":"   68","line":"      end"},
{"lineNum":"   69","line":"    end"},
{"lineNum":"   70","line":""},
{"lineNum":"   71","line":"    private def inner_content_tag(kind)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   72","line":"      case kind"},
{"lineNum":"   73","line":"      when :error","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"        \"error\""},
{"lineNum":"   75","line":"      when :fail","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"        \"failure\""},
{"lineNum":"   77","line":"      end"},
{"lineNum":"   78","line":"    end"},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"    private def write_inner_content(tag, exception, xml)"},
{"lineNum":"   81","line":"      if message = exception.message","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   82","line":"        attributes = {message: message}"},
{"lineNum":"   83","line":"      else"},
{"lineNum":"   84","line":"        attributes = NamedTuple.new"},
{"lineNum":"   85","line":"      end"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"      xml.element(tag, attributes) do"},
{"lineNum":"   88","line":"        backtrace = exception.backtrace? || Array(String).new","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   89","line":"        xml.text backtrace.join(\'\\n\')"},
{"lineNum":"   90","line":"      end"},
{"lineNum":"   91","line":"    end"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"    private def classname(result)"},
{"lineNum":"   94","line":"      result.file.sub(%r{\\.[^/.]+\\Z}, \"\").gsub(\"/\", \".\").gsub(/\\A\\.+|\\.+\\Z/, \"\")","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   95","line":"    end"},
{"lineNum":"   96","line":"  end"},
{"lineNum":"   97","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 23, "covered" : 0,};
var merged_data = [];
