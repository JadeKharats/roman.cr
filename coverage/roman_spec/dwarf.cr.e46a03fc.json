var data = {lines:[
{"lineNum":"    1","line":"require \"./dwarf/abbrev\""},
{"lineNum":"    2","line":"require \"./dwarf/info\""},
{"lineNum":"    3","line":"require \"./dwarf/line_numbers\""},
{"lineNum":"    4","line":"require \"./dwarf/strings\""},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"module Debug"},
{"lineNum":"    7","line":"  module DWARF"},
{"lineNum":"    8","line":"    def self.read_unsigned_leb128(io : IO)"},
{"lineNum":"    9","line":"      result = 0_u32"},
{"lineNum":"   10","line":"      shift = 0"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"      loop do"},
{"lineNum":"   13","line":"        byte = io.read_byte.not_nil!.to_i","class":"lineNoCov","hits":"0","possible_hits":"64",},
{"lineNum":"   14","line":"        result |= (byte & 0x7f) << shift","class":"lineNoCov","hits":"0","possible_hits":"19",},
{"lineNum":"   15","line":"        break if byte.bit(7) == 0","class":"lineNoCov","hits":"0","possible_hits":"35",},
{"lineNum":"   16","line":"        shift += 7"},
{"lineNum":"   17","line":"      end"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"      result"},
{"lineNum":"   20","line":"    end"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"    def self.read_signed_leb128(io : IO)"},
{"lineNum":"   23","line":"      result = 0_i32"},
{"lineNum":"   24","line":"      shift = 0"},
{"lineNum":"   25","line":"      size = 32"},
{"lineNum":"   26","line":"      byte = 0_u8"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"      loop do"},
{"lineNum":"   29","line":"        byte = io.read_byte.not_nil!.to_i","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   30","line":"        result |= (byte & 0x7f) << shift","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   31","line":"        shift += 7"},
{"lineNum":"   32","line":"        break if byte.bit(7) == 0","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   33","line":"      end"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"      # sign bit of byte is 2nd high order bit (0x40)"},
{"lineNum":"   36","line":"      if (shift < size) && (byte.bit(6) == 1)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   37","line":"        # sign extend"},
{"lineNum":"   38","line":"        result |= -(1 << shift)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   39","line":"      end"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"      result"},
{"lineNum":"   42","line":"    end"},
{"lineNum":"   43","line":"  end"},
{"lineNum":"   44","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "roman_spec", "date" : "2018-03-12 14:24:04", "instrumented" : 8, "covered" : 0,};
var merged_data = [];
